Exercices JavaScript générés par ChatGPT1. All about variables:Créez une fonction qui prend en entrée une chaîne de caractères et retourne une nouvelle chaîne avec les caractères inversés. Utilisez une variable pour stocker le résultat intermédiaire.2. Data types:Créez une fonction qui prend en entrée un tableau de nombres et retourne un nouveau tableau contenant uniquement les nombres pairs, mais représentés en chaîne de caractères.3. Types casting:Déclarez une variable contenant une chaîne de caractères représentant un nombre décimal. Utilisez la conversion de type pour obtenir la partie entière de ce nombre sans utiliser de fonctions intégrées telles que parseInt ou Math.floor.4. Data structures:Créez une fonction qui prend en entrée deux tableaux et retourne un nouveau tableau contenant uniquement les éléments communs aux deux tableaux, sans utiliser de boucle explicite.5. Equality comparison:Écrivez une fonction qui compare deux objets de manière récursive, en tenant compte de toutes les propriétés et sous-propriétés. Gérez les cas spéciaux tels que les tableaux.6. Loops and iteration:Utilisez une boucle for...in pour itérer à travers les propriétés d'un objet complexe (avec des propriétés imbriquées) et affichez-les dans la console.7. Control flow:Écrivez une fonction qui prend en entrée trois nombres et les compare de manière à trouver le plus petit, le plus grand et le milieu. Utilisez des déclarations conditionnelles sans utiliser de fonctions intégrées telles que Math.min ou Math.max.8. Expression and operators:Utilisez des opérateurs bit à bit pour inverser les bits d'un nombre entier. Affichez le résultat en binaire.9. Functions:Créez une fonction qui prend en entrée une fonction de rappel et l'exécute après un délai aléatoire compris entre 1 et 5 secondes.10. Strict mode:Utilisez le mode strict dans l'ensemble de votre script et corrigez toutes les erreurs qui apparaissent, y compris les erreurs de référence indéfinies et les erreurs de variables non déclarées.11. Using (this) keywords:Créez un objet avec des méthodes qui modifient ses propres propriétés à l'aide du mot-clé this. Utilisez cet objet dans une fonction callback asynchrone et assurez-vous que le contexte de this est préservé.12. Asynchronous JavaScript:Utilisez les promesses pour créer une séquence d'appels asynchrones où chaque appel dépend du résultat du précédent. Gérez les erreurs de manière appropriée.13. Work with API:Créez une application web qui effectue plusieurs requêtes à une API, combine les résultats et les affiche de manière interactive dans l'interface utilisateur.14. Classes:Définissez une classe abstraite avec une méthode abstraite. Créez ensuite deux sous-classes qui implémentent cette méthode de manière différente.15. Iteration and Generator:Utilisez un générateur pour itérer à travers les fichiers d'un répertoire de manière asynchrone, en utilisant les promesses.16. Modules in JS:Utilisez les importations dynamiques pour charger des modules de manière conditionnelle en fonction de certaines conditions dans votre application.17. Memory management:Créez une fonction qui génère une grande quantité d'objets et les stocke dans une structure de données. Surveillez la consommation de mémoire et assurez-vous que les objets sont correctement libérés après utilisation.